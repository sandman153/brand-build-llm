name: Brand Build CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform: deploy or destroy'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up GCP SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.0

      - name: Set GOOGLE_CREDENTIALS Environment Variable
        run: |
          echo "GOOGLE_CREDENTIALS<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.GCP_SA_KEY }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: List Directory Structure
        run: |
          echo "Listing root directory:"
          ls -al
          echo "Listing iac-terraform directory:"
          ls -al ./iac-terraform
          echo "Listing environments directory:"
          ls -al ./iac-terraform/environments
          echo "Listing prod directory:"
          ls -al ./iac-terraform/environments/prod

  terraform:
    name: Terraform Operations
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Init
        working-directory: ./iac-terraform/environments/prod
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: terraform init -input=false -backend-config=backend.tfvars

      - name: Terraform Plan
        working-directory: ./iac-terraform/environments/prod
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: terraform plan -input=false -var="credentials=${{ secrets.GCP_SA_KEY }}" -out=tfplan

      - name: Upload Terraform Plan
        working-directory: ./iac-terraform/environments/prod
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: tfplan

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: terraform
    if: ${{ github.event_name == 'push' || github.event.inputs.action == 'deploy' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Terraform Plan
        working-directory: ./iac-terraform/environments/prod
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: tfplan

      - name: Set GOOGLE_CREDENTIALS Environment Variable
        run: |
          echo "GOOGLE_CREDENTIALS<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.GCP_SA_KEY }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Terraform Apply
        working-directory: ./iac-terraform/environments/prod
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: terraform apply -input=false -auto-approve tfplan

  destroy:
    name: Destroy
    runs-on: ubuntu-latest
    needs: terraform
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set GOOGLE_CREDENTIALS Environment Variable
        run: |
          echo "GOOGLE_CREDENTIALS<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.GCP_SA_KEY }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: ./iac-terraform/environments/prod
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: terraform init -input=false -backend-config=backend.tfvars

      - name: Terraform Destroy
        working-directory: ./iac-terraform/environments/prod
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
        run: terraform destroy -input=false -auto-approve -var="credentials=${{ secrets.GCP_SA_KEY }}"
